<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.mapper.Inno72MachineMapper">
    <resultMap id="BaseResultMap" type="com.inno72.model.Inno72Machine">
        <!-- WARNING - @mbg.generated -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="machine_code" jdbcType="VARCHAR" property="machineCode"/>
        <result column="machine_name" jdbcType="VARCHAR" property="machineName"/>
        <result column="locale_id" jdbcType="VARCHAR" property="localeId"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="update_id" jdbcType="VARCHAR" property="updateId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="machine_status" jdbcType="INTEGER" property="machineStatus"/>
        <result column="net_status" jdbcType="INTEGER" property="netStatus"/>
        <result column="device_id" jdbcType="VARCHAR" property="deviceId"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="bluetooth_address" jdbcType="VARCHAR" property="bluetoothAddress"/>
        <result column="open_status" jdbcType="INTEGER" property="openStatus"/>
        <result column="monitor_start" jdbcType="VARCHAR" property="monitorStart"/>
        <result column="monitor_end" jdbcType="VARCHAR" property="monitorEnd"/>
        <result column="areaCode" jdbcType="VARCHAR" property="areaCode"/>
        <result column="localeStr" jdbcType="VARCHAR" property="localeStr"/>
        <association property="checkUserList" resultMap="checkUserList"/>
    </resultMap>

    <resultMap id="checkUserList" type="com.inno72.model.Inno72CheckUser">
        <result column="checkUserId" jdbcType="VARCHAR" property="id"/>
    </resultMap>

    <select id="findMachineByMachineStatus" parameterType="Integer" resultType="com.inno72.model.Inno72Machine">
		SELECT
			m.id as id,m.machine_code as machineCode,m.machine_status as machineStatus,
			CONCAT(
			area.province,
			area.city,
			area.district,
		IF ( area.circle = '其他' or area.circle is null, '', area.circle ),IFNULL( l.mall, "" ),IFNULL( l.NAME, "" ) ) AS localeStr
		FROM inno72_machine m
		LEFT JOIN inno72_locale l ON l.id = m.locale_id
		LEFT JOIN inno72_admin_area area ON area.CODE = l.area_code
		WHERE
			m.machine_status  = #{machineStatus} and l.monitor = 0
	</select>
    <select id="findMachineByMachineCode" resultMap="BaseResultMap">
      SELECT
        m.id,
	    l.monitor open_status,
	    m.machine_status,
	    l.monitor_start,
	    l.monitor_end,
	    if(a3.level=2,a3.code,a2.code) AS areaCode,
	    CONCAT(if(a1.name='其他','',a1.name),IFNULL( l.mall, "" ),IFNULL( l.NAME, "" )) address,
	    CONCAT(
			a1.province,
			a1.city,
			a1.district,
		IF ( a1.circle = '其他' or a1.circle is null, '', a1.circle ),IFNULL( l.mall, "" ),IFNULL( l.NAME, "" ) ) AS localeStr
      FROM
	    inno72_machine m
	    left join inno72_locale l on m.locale_id=l.id
	    left join inno72_admin_area a1 on l.area_code=a1.code
	    left join inno72_admin_area a2 on a1.parent_code=a2.code
	    left join inno72_admin_area a3 on a2.parent_code=a3.code
      WHERE
	    m.machine_code = #{machineCode}
	</select>

    <select id="findMachineNetStatusOpenList" parameterType="String" resultType="com.inno72.model.Inno72Machine">
        SELECT
        m.machine_code AS machineCode,
        m.net_status AS netStatus
        FROM
        inno72_machine m
        WHERE
        m.machine_code IN
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findAlarmAllMachine" resultMap="BaseResultMap">
        select m.id,m.machine_code,m.machine_name,m.locale_id,m.tag,m.create_time,m.update_time,m.machine_status,
        m.net_status,m.device_id,m.address,m.bluetooth_address,l.monitor open_status,
        CONCAT(
			area.province,
			area.city,
			area.district,
		IF ( area.circle = '其他' or area.circle is null, '', area.circle ),IFNULL( l.mall, "" ),IFNULL( l.NAME, "" ) ) AS localeStr,
		l.monitor_start,l.monitor_end
		from inno72_machine m
		LEFT JOIN inno72_locale l ON l.id = m.locale_id
		LEFT JOIN inno72_admin_area area ON area.CODE = l.area_code
		where (m.machine_status=4 or m.machine_status=9)
        and l.monitor=0

    </select>

    <select id="selectSignMachineList" resultMap="BaseResultMap">
        select a.id, machine_code,cu.id checkUserId from
        (
        (select m.id,m.machine_code from inno72_machine m inner join inno72_activity_plan_machine apm on m.id=apm.machine_id
        inner join inno72_activity_plan ap  on apm.activity_plan_id=ap.id
        left join inno72_check_sign_in csi on m.id=csi.machine_id and DATE_FORMAT(csi.create_time,'%Y-%m-%d')=#{findTime}
        where csi.create_time is null and  (#{findTime} BETWEEN ap.start_time and ap.end_time) group by m.id)
        UNION ALL
        (select m.id,m.machine_code
        from inno72_machine m
        inner join inno72_interact_machine im on m.id=im.machine_id
        inner join inno72_interact_machine_time imt on im.id=imt.interact_machine_id
        left join inno72_check_sign_in csi on m.id=csi.machine_id and DATE_FORMAT(csi.create_time,'%Y-%m-%d')=#{findTime}
        where csi.create_time is null and (#{findTime} BETWEEN imt.start_time and imt.end_time)
        )
        UNION ALL
        (select m.id,m.machine_code from inno72_machine m
        left join inno72_check_sign_in csi on m.id=csi.machine_id and DATE_FORMAT(csi.create_time,'%Y-%m-%d')=#{findTime}
        where csi.create_time is null and m.machine_status=9)
        )
        a left join inno72_check_user_machine cum on a.id=cum.machine_id
        left join inno72_check_user cu on cu.id=cum.check_user_id
        where cu.is_delete=0 and cu.status=0
    </select>
</mapper>
