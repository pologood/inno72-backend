<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.store.mapper.Inno72StorekeeperMapper">
  <resultMap id="BaseResultMap" type="com.inno72.store.model.Inno72Storekeeper">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="storeName" jdbcType="VARCHAR" property="storeName"/>
    <association property="storeFunctionList" resultMap="storeFunctionList"/>
  </resultMap>

  <resultMap id="storeFunctionList" type="com.inno72.store.model.Inno72StoreFunction">
      <result column="functionId" jdbcType="VARCHAR" property="id" />
      <result column="function_depict" jdbcType="VARCHAR" property="functionDepict" />
      <result column="function_path" jdbcType="VARCHAR" property="functionPath" />
      <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
      <result column="function_level" jdbcType="INTEGER" property="functionLevel" />
      <result column="function_icon" jdbcType="VARCHAR" property="functionIcon" />
      <result column="color" jdbcType="VARCHAR" property="color" />
      <result column="seq" jdbcType="INTEGER" property="seq" />
  </resultMap>

  <select id="selectOneByParam" resultMap="BaseResultMap">
      select * from inno72_storekeeper
      <where>
          <if test="mobile != null">
              and mobile = #{mobile}
          </if>
      </where>
      limit 1
  </select>
  <select id="selectKepperModel" resultMap="BaseResultMap">
      select sk.*,
      sf.id functionId,
      sf.function_depict,
      sf.function_path,
      sf.parent_id,
      sf.function_level,
      sf.function_icon,
      sf.color,
      sf.seq
      from inno72_storekeeper sk
      left join inno72_storekeeper_function skf on sk.id=skf.storekeeper_id
      left join inno72_store_function sf on skf.function_id = sf.id
      <where>
          <if test="storekeeperId != null">
              and sk.id=#{storekeeperId}
          </if>
          <if test="mobile != null">
              and sk.mobile=#{mobile}
          </if>
          <if test="pwd != null">
              and sk.pwd = #{pwd}
          </if>
      </where>
  </select>

  <select id="selectByPageLevel" resultMap="BaseResultMap">
    select sk.*,
    GROUP_CONCAT(s.name) storeName
    from inno72_storekeeper sk
    left join inno72_storekeeper_storte sks on sk.id=sks.storekeeper_id
    left join inno72_store s on sks.store_id=s.id
    <where>
        <if test="status != null and status != ''">
            and sk.status=#{status}
        </if>
        <if test="keyword != null and keyword != ''">
            and (sk.name like '%${keyword}%'
            or sk.mobile like '%${keyword}%'
            or s.name like '%${keyword}%'
        </if>
    </where>
    group by sk.id
    order by sk.update_time desc
  </select>
</mapper>