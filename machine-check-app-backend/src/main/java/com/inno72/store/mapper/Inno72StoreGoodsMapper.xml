<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.store.mapper.Inno72StoreGoodsMapper">
  <resultMap id="BaseResultMap" type="com.inno72.store.model.Inno72StoreGoods">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="store_id" jdbcType="VARCHAR" property="storeId" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="capacity" jdbcType="INTEGER" property="capacity" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsName"/>
  </resultMap>
  <select id="selectByParam" resultMap="BaseResultMap">
      select sg.goods_id,g.name goodsName from inno72_store_goods sg
      left join inno72_goods g on sg.goods_id=g.id
      left join inno72_store_order so on g.id=so.goods
      where
          receive_type=1
          <if test="receiveId != null">
              and receive_id=#{receiveId}
          </if>
          <if test="storeId != null">
              and store_id=#{storeId} and so.send_id=#{storeId}
          </if>
          <if test="keyword != null">
              and g.name like '%${keyword}%'
          </if>
      group by sg.goods_id
  </select>
</mapper>